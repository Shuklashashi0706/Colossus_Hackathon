/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CyberMaven, CyberMavenInterface } from "../CyberMaven";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ECR6551ERC1155Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ECR6551ERC20Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ECR6551ERC721SafeTransferFrom",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ECR6551ERC721Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ERC6551ERC1155SetApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC6551ERC20Approve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC6551ERC721Approve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "check",
        type: "bool",
      },
    ],
    name: "ERC6551ERC721SetApprovalForAll",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "callSetter",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "erc1155SafeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "erc1155setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "erc20Approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "erc20Transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "erc721Approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "erc721SafeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "erc721Transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "erc721setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeCall",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getValueFromMyContract",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setWalletName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "setWalletSymbol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c0604052601160809081527010de58995c93585d995b8815d85b1b195d607a1b60a0525f906200003190826200011a565b50604080518082019091526003815262434d5760e81b60208201526001906200005b90826200011a565b506002805460ff1916600117905534801562000075575f80fd5b50620001e6565b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680620000a557607f821691505b602082108103620000c457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200011557805f5260205f20601f840160051c81016020851015620000f15750805b601f840160051c820191505b8181101562000112575f8155600101620000fd565b50505b505050565b81516001600160401b038111156200013657620001366200007c565b6200014e8162000147845462000090565b84620000ca565b602080601f83116001811462000184575f84156200016c5750858301515b5f19600386901b1c1916600185901b178555620001de565b5f85815260208120601f198616915b82811015620001b45788860151825594840194600190910190840162000193565b5085821015620001d257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b611ce080620001f45f395ff3fe608060405260043610610164575f3560e01c80635e59658d116100cd578063b6011b4c11610087578063f23a6e6111610062578063f23a6e611461042b578063f6f5e5de14610456578063fc0c546a14610475578063ff627136146104ac575f80fd5b8063b6011b4c146103c2578063bc197c81146103e1578063cf838bb71461040c575f80fd5b80635e59658d146103295780638da5cb5b1461033c57806395d89b41146103685780639e5d4c491461037c578063ace561a81461038f578063affed0e0146103ae575f80fd5b80631626ba7e1161011e5780631626ba7e1461026357806318fa06531461028257806336ea1ad3146102a15780633790767d146102c05780633b403383146102df57806354fd4d50146102fe575f80fd5b806301ffc9a71461016f578063052aafe6146101a357806306fdde03146101c45780630c190999146101e557806312065fe014610204578063150b7a0214610220575f80fd5b3661016b57005b5f80fd5b34801561017a575f80fd5b5061018e6101893660046113fc565b6104cb565b60405190151581526020015b60405180910390f35b3480156101ae575f80fd5b506101c26101bd366004611447565b610517565b005b3480156101cf575f80fd5b506101d86105fe565b60405161019a91906114dc565b3480156101f0575f80fd5b506101d86101ff366004611532565b610689565b34801561020f575f80fd5b50475b60405190815260200161019a565b34801561022b575f80fd5b5061024a61023a366004611638565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161019a565b34801561026e575f80fd5b5061024a61027d36600461169f565b61074b565b34801561028d575f80fd5b506101c261029c3660046116e2565b610780565b3480156102ac575f80fd5b506101c26102bb366004611447565b61085b565b3480156102cb575f80fd5b506101c26102da3660046116e2565b610939565b3480156102ea575f80fd5b506101c26102f9366004611720565b610a28565b348015610309575f80fd5b506002546103179060ff1681565b60405160ff909116815260200161019a565b6101d8610337366004611532565b610a70565b348015610347575f80fd5b50610350610b01565b6040516001600160a01b03909116815260200161019a565b348015610373575f80fd5b506101d8610bea565b6101d861038a36600461176c565b610bf7565b34801561039a575f80fd5b506101c26103a93660046116e2565b610cbb565b3480156103b9575f80fd5b50600354610212565b3480156103cd575f80fd5b506101c26103dc3660046116e2565b610daa565b3480156103ec575f80fd5b5061024a6103fb36600461183f565b63bc197c8160e01b95945050505050565b348015610417575f80fd5b506101c26104263660046116e2565b610e8b565b348015610436575f80fd5b5061024a6104453660046118e5565b63f23a6e6160e01b95945050505050565b348015610461575f80fd5b506101c2610470366004611948565b610f6c565b348015610480575f80fd5b50610489611053565b604080519384526001600160a01b0390921660208401529082015260600161019a565b3480156104b7575f80fd5b506101c26104c6366004611720565b61108e565b5f6001600160e01b031982166301ffc9a760e01b14806104fb57506001600160e01b03198216630801407360e31b145b1561050857506001919050565b610511826110d1565b92915050565b61051f610b01565b6001600160a01b0316336001600160a01b0316146105585760405162461bcd60e51b815260040161054f906119be565b60405180910390fd5b60405163a22cb46560e01b81526001600160a01b038381166004830152821515602483015284169063a22cb465906044015f604051808303815f87803b1580156105a0575f80fd5b505af11580156105b2573d5f803e3d5ffd5b50505050801515826001600160a01b0316846001600160a01b03167fd7698c899db5f56816711124e6ab44c0cfa2e194af43f33492af91a6d54ff91960405160405180910390a4505050565b5f805461060a906119f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610636906119f5565b80156106815780601f1061065857610100808354040283529160200191610681565b820191905f5260205f20905b81548152906001019060200180831161066457829003601f168201915b505050505081565b60605f80856001600160a01b031685856040516106a7929190611a2d565b5f60405180830381855afa9150503d805f81146106df576040519150601f19603f3d011682016040523d82523d5f602084013e6106e4565b606091505b5091509150816107405760405162461bcd60e51b815260206004820152602160248201527f43796265724d6176656e203a20436f6e74726163742063616c6c206661696c656044820152601960fa1b606482015260840161054f565b9150505b9392505050565b5f8061075f610758610b01565b8585611105565b905080156107775750630b135d3f60e11b9050610511565b505f9392505050565b610788610b01565b6001600160a01b0316336001600160a01b0316146107b85760405162461bcd60e51b815260040161054f906119be565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044015f604051808303815f87803b1580156107ff575f80fd5b505af1158015610811573d5f803e3d5ffd5b5050505080826001600160a01b0316846001600160a01b03167fa96e2ec8a7a5dc95067b7579776e83cb3cec114c267f7938611fbf1ea3176abb60405160405180910390a4505050565b610863610b01565b6001600160a01b0316336001600160a01b0316146108935760405162461bcd60e51b815260040161054f906119be565b60405163a22cb46560e01b81526001600160a01b038381166004830152821515602483015284169063a22cb465906044015f604051808303815f87803b1580156108db575f80fd5b505af11580156108ed573d5f803e3d5ffd5b50505050801515826001600160a01b0316846001600160a01b03167f5bc78940a1dd276a0640342496ac76b74787395ee09c644a30550fb1862cd7cc60405160405180910390a4505050565b610941610b01565b6001600160a01b0316336001600160a01b0316146109715760405162461bcd60e51b815260040161054f906119be565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303815f875af11580156109bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109e19190611a3c565b5080826001600160a01b0316846001600160a01b03167f1a06370a29b7d12f762dd19849fed38b8d5f15530e7fbf6406ac5cb5041fec5760405160405180910390a4505050565b610a30610b01565b6001600160a01b0316336001600160a01b031614610a605760405162461bcd60e51b815260040161054f906119be565b6001610a6c8282611aa3565b5050565b6060610a7a610b01565b6001600160a01b0316336001600160a01b031614610aaa5760405162461bcd60e51b815260040161054f906119be565b5f80856001600160a01b0316348686604051610ac7929190611a2d565b5f6040518083038185875af1925050503d805f81146106df576040519150601f19603f3d011682016040523d82523d5f602084013e6106e4565b5f805f80306001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610b41573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b659190611b62565b925092509250468314610b7b575f935050505090565b6040516331a9108f60e11b8152600481018290526001600160a01b03831690636352211e90602401602060405180830381865afa158015610bbe573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be29190611b98565b935050505090565b6001805461060a906119f5565b6060610c01610b01565b6001600160a01b0316336001600160a01b031614610c315760405162461bcd60e51b815260040161054f906119be565b5f856001600160a01b0316858585604051610c4d929190611a2d565b5f6040518083038185875af1925050503d805f8114610c87576040519150601f19603f3d011682016040523d82523d5f602084013e610c8c565b606091505b509250905080610c9e57815160208301fd5b60038054905f610cad83611bc7565b919050555050949350505050565b610cc3610b01565b6001600160a01b0316336001600160a01b031614610cf35760405162461bcd60e51b815260040161054f906119be565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303815f875af1158015610d3f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d639190611a3c565b5080826001600160a01b0316846001600160a01b03167f74f5671b2c665be44c6acf481087ab8ee03946f0f59891926722b7c4c9b2c89560405160405180910390a4505050565b610db2610b01565b6001600160a01b0316336001600160a01b031614610de25760405162461bcd60e51b815260040161054f906119be565b6040516323b872dd60e01b81523060048201526001600160a01b038381166024830152604482018390528416906323b872dd906064015f604051808303815f87803b158015610e2f575f80fd5b505af1158015610e41573d5f803e3d5ffd5b5050505080826001600160a01b0316846001600160a01b03167f699c030d2793978709485653c78b3fa764810320ca32b0160240a8c90e9b5f7860405160405180910390a4505050565b610e93610b01565b6001600160a01b0316336001600160a01b031614610ec35760405162461bcd60e51b815260040161054f906119be565b604051632142170760e11b81523060048201526001600160a01b038381166024830152604482018390528416906342842e0e906064015f604051808303815f87803b158015610f10575f80fd5b505af1158015610f22573d5f803e3d5ffd5b5050505080826001600160a01b0316846001600160a01b03167f10ac19deacd17fbdf34066e59e11af29ce80412a7c87fbb7f53ce7366986768d60405160405180910390a4505050565b610f74610b01565b6001600160a01b0316336001600160a01b031614610fa45760405162461bcd60e51b815260040161054f906119be565b604051637921219560e11b81526001600160a01b0387169063f242432a90610fda90309089908990899089908990600401611bdf565b5f604051808303815f87803b158015610ff1575f80fd5b505af1158015611003573d5f803e3d5ffd5b50506040516001600160a01b0389811682528693508792508816907fd45f6c962afe2748ec880e008162e9fa2b340e699f62f0a4e555e679c6d0831d9060200160405180910390a4505050505050565b5f808030803b9061106f90611069606084611c39565b83611164565b8060200190518101906110829190611b62565b93509350935050909192565b611096610b01565b6001600160a01b0316336001600160a01b0316146110c65760405162461bcd60e51b815260040161054f906119be565b5f610a6c8282611aa3565b5f6001600160e01b03198216630271189760e51b148061051157506301ffc9a760e01b6001600160e01b0319831614610511565b5f805f6111128585611215565b5090925090505f81600381111561112b5761112b611c4c565b1480156111495750856001600160a01b0316826001600160a01b0316145b8061115a575061115a86868661125e565b9695505050505050565b6060833b5f81900361118557505060408051602081019091525f8152610744565b808411156111a257505060408051602081019091525f8152610744565b838310156111d45760405163162544fd60e11b815260048101829052602481018590526044810184905260640161054f565b8383038482035f8282106111e857826111ea565b815b60408051603f8301601f19168101909152818152955090508087602087018a3c505050509392505050565b5f805f835160410361124c576020840151604085015160608601515f1a61123e88828585611334565b955095509550505050611257565b505081515f91506002905b9250925092565b5f805f856001600160a01b0316858560405160240161127e929190611c60565b60408051601f198184030181529181526020820180516001600160e01b0316630b135d3f60e11b179052516112b39190611c78565b5f60405180830381855afa9150503d805f81146112eb576040519150601f19603f3d011682016040523d82523d5f602084013e6112f0565b606091505b509150915081801561130457506020815110155b801561115a57508051630b135d3f60e11b906113299083016020908101908401611c93565b149695505050505050565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561136d57505f915060039050826113f2565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156113be573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b0381166113e957505f9250600191508290506113f2565b92505f91508190505b9450945094915050565b5f6020828403121561140c575f80fd5b81356001600160e01b031981168114610744575f80fd5b6001600160a01b0381168114611437575f80fd5b50565b8015158114611437575f80fd5b5f805f60608486031215611459575f80fd5b833561146481611423565b9250602084013561147481611423565b915060408401356114848161143a565b809150509250925092565b5f5b838110156114a9578181015183820152602001611491565b50505f910152565b5f81518084526114c881602086016020860161148f565b601f01601f19169290920160200192915050565b602081525f61074460208301846114b1565b5f8083601f8401126114fe575f80fd5b5081356001600160401b03811115611514575f80fd5b60208301915083602082850101111561152b575f80fd5b9250929050565b5f805f60408486031215611544575f80fd5b833561154f81611423565b925060208401356001600160401b03811115611569575f80fd5b611575868287016114ee565b9497909650939450505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156115be576115be611582565b604052919050565b5f6001600160401b038311156115de576115de611582565b6115f1601f8401601f1916602001611596565b9050828152838383011115611604575f80fd5b828260208301375f602084830101529392505050565b5f82601f830112611629575f80fd5b610744838335602085016115c6565b5f805f806080858703121561164b575f80fd5b843561165681611423565b9350602085013561166681611423565b92506040850135915060608501356001600160401b03811115611687575f80fd5b6116938782880161161a565b91505092959194509250565b5f80604083850312156116b0575f80fd5b8235915060208301356001600160401b038111156116cc575f80fd5b6116d88582860161161a565b9150509250929050565b5f805f606084860312156116f4575f80fd5b83356116ff81611423565b9250602084013561170f81611423565b929592945050506040919091013590565b5f60208284031215611730575f80fd5b81356001600160401b03811115611745575f80fd5b8201601f81018413611755575f80fd5b611764848235602084016115c6565b949350505050565b5f805f806060858703121561177f575f80fd5b843561178a81611423565b93506020850135925060408501356001600160401b038111156117ab575f80fd5b6117b7878288016114ee565b95989497509550505050565b5f82601f8301126117d2575f80fd5b813560206001600160401b038211156117ed576117ed611582565b8160051b6117fc828201611596565b9283528481018201928281019087851115611815575f80fd5b83870192505b848310156118345782358252918301919083019061181b565b979650505050505050565b5f805f805f60a08688031215611853575f80fd5b853561185e81611423565b9450602086013561186e81611423565b935060408601356001600160401b0380821115611889575f80fd5b61189589838a016117c3565b945060608801359150808211156118aa575f80fd5b6118b689838a016117c3565b935060808801359150808211156118cb575f80fd5b506118d88882890161161a565b9150509295509295909350565b5f805f805f60a086880312156118f9575f80fd5b853561190481611423565b9450602086013561191481611423565b9350604086013592506060860135915060808601356001600160401b0381111561193c575f80fd5b6118d88882890161161a565b5f805f805f8060a0878903121561195d575f80fd5b863561196881611423565b9550602087013561197881611423565b9450604087013593506060870135925060808701356001600160401b038111156119a0575f80fd5b6119ac89828a016114ee565b979a9699509497509295939492505050565b6020808252601b908201527f43796265724d6176656e3a204e6f7420746f6b656e206f776e65720000000000604082015260600190565b600181811c90821680611a0957607f821691505b602082108103611a2757634e487b7160e01b5f52602260045260245ffd5b50919050565b818382375f9101908152919050565b5f60208284031215611a4c575f80fd5b81516107448161143a565b601f821115611a9e57805f5260205f20601f840160051c81016020851015611a7c5750805b601f840160051c820191505b81811015611a9b575f8155600101611a88565b50505b505050565b81516001600160401b03811115611abc57611abc611582565b611ad081611aca84546119f5565b84611a57565b602080601f831160018114611b03575f8415611aec5750858301515b5f19600386901b1c1916600185901b178555611b5a565b5f85815260208120601f198616915b82811015611b3157888601518255948401946001909101908401611b12565b5085821015611b4e57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f805f60608486031215611b74575f80fd5b835192506020840151611b8681611423565b80925050604084015190509250925092565b5f60208284031215611ba8575f80fd5b815161074481611423565b634e487b7160e01b5f52601160045260245ffd5b5f60018201611bd857611bd8611bb3565b5060010190565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905281018290525f828460c08401375f60c0848401015260c0601f19601f8501168301019050979650505050505050565b8181038181111561051157610511611bb3565b634e487b7160e01b5f52602160045260245ffd5b828152604060208201525f61176460408301846114b1565b5f8251611c8981846020870161148f565b9190910192915050565b5f60208284031215611ca3575f80fd5b505191905056fea264697066735822122034b51244b1779dbc9ffda62e18b632079bbeb3c986c34e06b484c99a31fe13e164736f6c63430008180033";

type CyberMavenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CyberMavenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CyberMaven__factory extends ContractFactory {
  constructor(...args: CyberMavenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CyberMaven";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CyberMaven> {
    return super.deploy(overrides || {}) as Promise<CyberMaven>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CyberMaven {
    return super.attach(address) as CyberMaven;
  }
  connect(signer: Signer): CyberMaven__factory {
    return super.connect(signer) as CyberMaven__factory;
  }
  static readonly contractName: "CyberMaven";
  public readonly contractName: "CyberMaven";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CyberMavenInterface {
    return new utils.Interface(_abi) as CyberMavenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CyberMaven {
    return new Contract(address, _abi, signerOrProvider) as CyberMaven;
  }
}
