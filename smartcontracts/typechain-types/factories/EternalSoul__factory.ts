/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EternalSoul, EternalSoulInterface } from "../EternalSoul";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_intialURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        internalType: "string",
        name: "_version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_nftPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "flowContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ownerOrApproved",
        type: "address",
      },
    ],
    name: "AssetDestroyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metaDataURI",
        type: "string",
      },
    ],
    name: "AssetIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "reciepient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "SIGNATURE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIGNING_DOMAIN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessMasterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "delegateIssue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "destroyAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "issue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct EternalSoul.LazyNFTVoucher",
        name: "voucher",
        type: "tuple",
      },
    ],
    name: "lazyIssue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct EternalSoul.LazyNFTVoucher",
        name: "voucher",
        type: "tuple",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setNFTPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61016060405234801562000011575f80fd5b5060405162002d5b38038062002d5b8339810160408190526200003491620002da565b838388885f62000045838262000457565b50600162000054828262000457565b50620000669150839050600a62000175565b610120526200007781600b62000175565b61014052815160208084019190912060e052815190820120610100524660a0526200010460e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c052600f6200011b868262000457565b50601280546001600160a01b0383166001600160a01b03199182168117909255600e80549091169091179055601062000155858262000457565b50601162000164848262000457565b5050600c55506200057b9350505050565b5f60208351101562000194576200018c83620001ad565b9050620001a7565b81620001a1848262000457565b5060ff90505b92915050565b5f80829050601f81511115620001e3578260405163305a27a960e01b8152600401620001da919062000523565b60405180910390fd5b8051620001f08262000557565b179392505050565b634e487b7160e01b5f52604160045260245ffd5b5f5b83811015620002285781810151838201526020016200020e565b50505f910152565b5f82601f83011262000240575f80fd5b81516001600160401b03808211156200025d576200025d620001f8565b604051601f8301601f19908116603f01168101908282118183101715620002885762000288620001f8565b81604052838152866020858801011115620002a1575f80fd5b620002b48460208301602089016200020c565b9695505050505050565b80516001600160a01b0381168114620002d5575f80fd5b919050565b5f805f805f805f60e0888a031215620002f1575f80fd5b87516001600160401b038082111562000308575f80fd5b620003168b838c0162000230565b985060208a01519150808211156200032c575f80fd5b6200033a8b838c0162000230565b975060408a015191508082111562000350575f80fd5b6200035e8b838c0162000230565b965060608a015191508082111562000374575f80fd5b620003828b838c0162000230565b955060808a015191508082111562000398575f80fd5b50620003a78a828b0162000230565b93505060a08801519150620003bf60c08901620002be565b905092959891949750929550565b600181811c90821680620003e257607f821691505b6020821081036200040157634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200045257805f5260205f20601f840160051c810160208510156200042e5750805b601f840160051c820191505b818110156200044f575f81556001016200043a565b50505b505050565b81516001600160401b03811115620004735762000473620001f8565b6200048b81620004848454620003cd565b8462000407565b602080601f831160018114620004c1575f8415620004a95750858301515b5f19600386901b1c1916600185901b1785556200051b565b5f85815260208120601f198616915b82811015620004f157888601518255948401946001909101908401620004d0565b50858210156200050f57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b602081525f8251806020840152620005438160408501602087016200020c565b601f01601f19169190910160400192915050565b8051602080830151919081101562000401575f1960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161278e620005cd5f395f6113d901525f6113a701525f6119d701525f6119af01525f61190a01525f61193401525f61195e015261278e5ff3fe6080604052600436106101c5575f3560e01c806355f804b3116100f257806395d89b4111610092578063c87b56dd11610062578063c87b56dd14610507578063e3faad9414610526578063e985e9c51461053a578063f26d66c014610559575f80fd5b806395d89b41146104a1578063a22cb465146104b5578063a4157296146104d4578063b88d4fde146104e8575f80fd5b80636c0360eb116100cd5780636c0360eb1461042857806370a082311461043c57806381530b681461045b57806384b0196e1461047a575f80fd5b806355f804b3146103cb5780636352211e146103ea5780636771309b14610409575f80fd5b806318160ddd1161016857806342842e0e1161013857806342842e0e14610348578063474c1520146103675780634f6ccce71461038657806354fd4d50146103a5575f80fd5b806318160ddd146102d757806323b872dd146102eb5780632f745c591461030a5780633a61d52c14610329575f80fd5b8063081812fc116101a3578063081812fc1461024b578063095ea7b3146102825780630aa7c854146102a35780630d39fc81146102c2575f80fd5b806301ffc9a7146101c957806304b444d9146101fd57806306fdde031461022a575b5f80fd5b3480156101d4575f80fd5b506101e86101e336600461204e565b61056c565b60405190151581526020015b60405180910390f35b348015610208575f80fd5b5061021c610217366004612122565b61057c565b6040519081526020016101f4565b348015610235575f80fd5b5061023e6106c7565b6040516101f491906121b2565b348015610256575f80fd5b5061026a6102653660046121c4565b610756565b6040516001600160a01b0390911681526020016101f4565b34801561028d575f80fd5b506102a161029c3660046121db565b61077d565b005b3480156102ae575f80fd5b50600e5461026a906001600160a01b031681565b3480156102cd575f80fd5b5061021c600c5481565b3480156102e2575f80fd5b5060085461021c565b3480156102f6575f80fd5b506102a1610305366004612205565b61078c565b348015610315575f80fd5b5061021c6103243660046121db565b610815565b348015610334575f80fd5b5061026a610343366004612243565b610878565b348015610353575f80fd5b506102a1610362366004612205565b610953565b348015610372575f80fd5b506102a16103813660046121c4565b610972565b348015610391575f80fd5b5061021c6103a03660046121c4565b610a45565b3480156103b0575f80fd5b506103b9600181565b60405160ff90911681526020016101f4565b3480156103d6575f80fd5b506102a16103e536600461227a565b610a9a565b3480156103f5575f80fd5b5061026a6104043660046121c4565b610b3a565b348015610414575f80fd5b5061021c610423366004612122565b610b44565b348015610433575f80fd5b5061023e610c3f565b348015610447575f80fd5b5061021c6104563660046122ac565b610ccb565b348015610466575f80fd5b506102a16104753660046121c4565b600c55565b348015610485575f80fd5b5061048e610d10565b6040516101f497969594939291906122c7565b3480156104ac575f80fd5b5061023e610d52565b3480156104c0575f80fd5b506102a16104cf36600461236b565b610d61565b3480156104df575f80fd5b5061023e610d6c565b3480156104f3575f80fd5b506102a16105023660046123a2565b610d79565b348015610512575f80fd5b5061023e6105213660046121c4565b610d90565b348015610531575f80fd5b5061023e610ebd565b348015610545575f80fd5b506101e861055436600461241d565b610eca565b61021c610567366004612243565b610ef7565b5f6105768261113b565b92915050565b6012545f906001600160a01b031663efd46065336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156105d2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105f69190612449565b6106535760405162461bcd60e51b815260206004820152602360248201527f457465726e616c536f756c3a2055736572206973206e6f7420617574686f72696044820152621e995960ea1b60648201526084015b60405180910390fd5b600d8054905f61066283612478565b9091555050600d54610674848261115f565b61067e8184611178565b336001600160a01b0316817fdb2bfbc11c8a6350afe6406725431235c99ed05824d40daee07eae3d1fafb70b856040516106b891906121b2565b60405180910390a39392505050565b60605f80546106d590612490565b80601f016020809104026020016040519081016040528092919081815260200182805461070190612490565b801561074c5780601f106107235761010080835404028352916020019161074c565b820191905f5260205f20905b81548152906001019060200180831161072f57829003601f168201915b5050505050905090565b5f610760826111ef565b505f828152600460205260409020546001600160a01b0316610576565b610788828233611227565b5050565b6001600160a01b0382166107b557604051633250574960e11b81525f600482015260240161064a565b5f6107c1838333611234565b9050836001600160a01b0316816001600160a01b03161461080f576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161064a565b50505050565b5f61081f83610ccb565b82106108505760405163295f44f760e21b81526001600160a01b03841660048201526024810183905260440161064a565b506001600160a01b03919091165f908152600660209081526040808320938352929052205490565b5f806108fe7f6a50cd13df4d49c839384eb15944b5713af5a276ddb78e79557d1798dbca09fa84356108ad60208701876124c8565b6040516108bb929190612512565b6040519081900381206108e39392916020019283526020830191909152604082015260600190565b604051602081830303815290604052805190602001206112b3565b90505f61094b8261091260408701876124c8565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506112df92505050565b949350505050565b61096d83838360405180602001604052805f815250610d79565b505050565b5f81815260026020526040902054610994906001600160a01b03163383611307565b6109fb5760405162461bcd60e51b815260206004820152603260248201527f457465726e616c536f756c3a2043616c6c6572206973206e6f7420746f6b656e604482015271081bdddb995c881bdc88185c1c1c9bdd995960721b606482015260840161064a565b610a0481611368565b807fc3a3686eed3b315ba4f3b1a0bf88b63a4525e3f27314495ba7dc0a40a6c4cd90336040516001600160a01b03909116815260200160405180910390a250565b5f610a4f60085490565b8210610a775760405163295f44f760e21b81525f60048201526024810183905260440161064a565b60088281548110610a8a57610a8a612521565b905f5260205f2001549050919050565b6012546001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610aee573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b129190612449565b610b2e5760405162461bcd60e51b815260040161064a90612535565b600f61078882826125bd565b5f610576826111ef565b6012545f906001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610b9a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bbe9190612449565b610bda5760405162461bcd60e51b815260040161064a90612535565b600d8054905f610be983612478565b9091555050600d54610bfb848261115f565b610c058184611178565b836001600160a01b0316817fdb2bfbc11c8a6350afe6406725431235c99ed05824d40daee07eae3d1fafb70b856040516106b891906121b2565b600f8054610c4c90612490565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7890612490565b8015610cc35780601f10610c9a57610100808354040283529160200191610cc3565b820191905f5260205f20905b815481529060010190602001808311610ca657829003601f168201915b505050505081565b5f6001600160a01b038216610cf5576040516322718ad960e21b81525f600482015260240161064a565b506001600160a01b03165f9081526003602052604090205490565b5f6060805f805f6060610d216113a0565b610d296113d2565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600180546106d590612490565b6107883383836113ff565b60118054610c4c90612490565b610d8484848461078c565b61080f8484848461149d565b606033610d9c836111ef565b6001600160a01b031614610df25760405162461bcd60e51b815260206004820152601f60248201527f457465726e616c536f756c3a204e6f6e2d4578697374656e7420417373657400604482015260640161064a565b5f8281526013602052604090208054610e0a90612490565b90505f03610e22575f610e1b6115c3565b9392505050565b5f8281526013602052604090208054610e3a90612490565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6690612490565b8015610eb15780601f10610e8857610100808354040283529160200191610eb1565b820191905f5260205f20905b815481529060010190602001808311610e9457829003601f168201915b50505050509050919050565b60108054610c4c90612490565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6012545f906001600160a01b0316636d70f7ae610f1384610878565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610f55573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f799190612449565b610fb85760405162461bcd60e51b815260206004820152601060248201526f2bb937b7339039b4b3b730ba3ab9329760811b604482015260640161064a565b600c541561100a57813534101561100a5760405162461bcd60e51b81526020600482015260166024820152752737ba1022b737bab3b41032ba3432b91039b2b73a1760511b604482015260640161064a565b600d8054905f61101983612478565b9091555050600d5461102b338261115f565b6110758161103c60208601866124c8565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061117892505050565b60125460408051633955348d60e21b815290515f926001600160a01b03169163e554d2349160048083019260209291908290030181865afa1580156110bc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110e0919061267d565b90506110ee338284346115d2565b33827fdb2bfbc11c8a6350afe6406725431235c99ed05824d40daee07eae3d1fafb70b61111e60208801886124c8565b60405161112c929190612698565b60405180910390a35092915050565b5f6001600160e01b0319821663780e9d6360e01b14806105765750610576826116ca565b610788828260405180602001604052805f815250611719565b33611182836111ef565b6001600160a01b0316146111d85760405162461bcd60e51b815260206004820152601f60248201527f457465726e616c536f756c3a204e6f6e2d4578697374656e7420417373657400604482015260640161064a565b5f82815260136020526040902061096d82826125bd565b5f818152600260205260408120546001600160a01b03168061057657604051637e27328960e01b81526004810184905260240161064a565b61096d838383600161172f565b5f6001600160a01b0384161561129e5760405162461bcd60e51b815260206004820152602960248201527f457465726e616c536f756c203a2041737365742063616e6e6f74206265207472604482015268185b9cd9995c9c995960ba1b606482015260840161064a565b5f6112aa858585611833565b95945050505050565b5f6105766112bf6118fe565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f806112ed8686611a27565b9250925092506112fd8282611a70565b5090949350505050565b5f6001600160a01b0383161580159061094b5750826001600160a01b0316846001600160a01b0316148061134057506113408484610eca565b8061094b5750505f908152600460205260409020546001600160a01b03908116911614919050565b5f6113745f835f611234565b90506001600160a01b03811661078857604051637e27328960e01b81526004810183905260240161064a565b60606113cd7f0000000000000000000000000000000000000000000000000000000000000000600a611b28565b905090565b60606113cd7f0000000000000000000000000000000000000000000000000000000000000000600b611b28565b6001600160a01b03821661143157604051630b61174360e31b81526001600160a01b038316600482015260240161064a565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561080f57604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906114df9033908890879087906004016126c6565b6020604051808303815f875af1925050508015611519575060408051601f3d908101601f1916820190925261151691810190612702565b60015b611580573d808015611546576040519150601f19603f3d011682016040523d82523d5f602084013e61154b565b606091505b5080515f0361157857604051633250574960e11b81526001600160a01b038516600482015260240161064a565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146115bc57604051633250574960e11b81526001600160a01b038516600482015260240161064a565b5050505050565b6060600f80546106d590612490565b5f836001600160a01b0316826040515f6040518083038185875af1925050503d805f811461161b576040519150601f19603f3d011682016040523d82523d5f602084013e611620565b606091505b50509050806116715760405162461bcd60e51b815260206004820152601c60248201527f457465726e616c536f756c3a205472616e73666572206661696c656400000000604482015260640161064a565b604080516001600160a01b03808816825286166020820152908101849052606081018390527faeadc2c673108f922a1042ef404b73ae1af992c9ae54249a4a7d13ef21ef2c189060800160405180910390a15050505050565b5f6001600160e01b031982166380ac58cd60e01b14806116fa57506001600160e01b03198216635b5e139f60e01b145b8061057657506301ffc9a760e01b6001600160e01b0319831614610576565b6117238383611bd1565b61096d5f84848461149d565b808061174357506001600160a01b03821615155b15611804575f611752846111ef565b90506001600160a01b0383161580159061177e5750826001600160a01b0316816001600160a01b031614155b8015611791575061178f8184610eca565b155b156117ba5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161064a565b81156118025783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f80611840858585611c32565b90506001600160a01b03811661189c5761189784600880545f838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6118bf565b846001600160a01b0316816001600160a01b0316146118bf576118bf8185611d24565b6001600160a01b0385166118db576118d684611db1565b61094b565b846001600160a01b0316816001600160a01b03161461094b5761094b8585611e58565b5f306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561195657507f000000000000000000000000000000000000000000000000000000000000000046145b1561198057507f000000000000000000000000000000000000000000000000000000000000000090565b6113cd604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b5f805f8351604103611a5e576020840151604085015160608601515f1a611a5088828585611ea6565b955095509550505050611a69565b505081515f91506002905b9250925092565b5f826003811115611a8357611a8361271d565b03611a8c575050565b6001826003811115611aa057611aa061271d565b03611abe5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611ad257611ad261271d565b03611af35760405163fce698f760e01b81526004810182905260240161064a565b6003826003811115611b0757611b0761271d565b03610788576040516335e2f38360e21b81526004810182905260240161064a565b606060ff8314611b4257611b3b83611f6e565b9050610576565b818054611b4e90612490565b80601f0160208091040260200160405190810160405280929190818152602001828054611b7a90612490565b8015611bc55780601f10611b9c57610100808354040283529160200191611bc5565b820191905f5260205f20905b815481529060010190602001808311611ba857829003601f168201915b50505050509050610576565b6001600160a01b038216611bfa57604051633250574960e11b81525f600482015260240161064a565b5f611c0683835f611234565b90506001600160a01b0381161561096d576040516339e3563760e11b81525f600482015260240161064a565b5f828152600260205260408120546001600160a01b0390811690831615611c5e57611c5e818486611fab565b6001600160a01b03811615611c9857611c795f855f8061172f565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615611cc6576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f611d2e83610ccb565b5f83815260076020526040902054909150808214611d7f576001600160a01b0384165f9081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b505f9182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008545f90611dc290600190612731565b5f8381526009602052604081205460088054939450909284908110611de957611de9612521565b905f5260205f20015490508060088381548110611e0857611e08612521565b5f918252602080832090910192909255828152600990915260408082208490558582528120556008805480611e3f57611e3f612744565b600190038181905f5260205f20015f9055905550505050565b5f6001611e6484610ccb565b611e6e9190612731565b6001600160a01b039093165f908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611edf57505f91506003905082611f64565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611f30573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116611f5b57505f925060019150829050611f64565b92505f91508190505b9450945094915050565b60605f611f7a8361200f565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b611fb6838383611307565b61096d576001600160a01b038316611fe457604051637e27328960e01b81526004810182905260240161064a565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161064a565b5f60ff8216601f81111561057657604051632cd44ac360e21b815260040160405180910390fd5b6001600160e01b03198116811461204b575f80fd5b50565b5f6020828403121561205e575f80fd5b8135610e1b81612036565b6001600160a01b038116811461204b575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff808411156120ab576120ab61207d565b604051601f8501601f19908116603f011681019082821181831017156120d3576120d361207d565b816040528093508581528686860111156120eb575f80fd5b858560208301375f602087830101525050509392505050565b5f82601f830112612113575f80fd5b610e1b83833560208501612091565b5f8060408385031215612133575f80fd5b823561213e81612069565b9150602083013567ffffffffffffffff811115612159575f80fd5b61216585828601612104565b9150509250929050565b5f81518084525f5b8181101561219357602081850181015186830182015201612177565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610e1b602083018461216f565b5f602082840312156121d4575f80fd5b5035919050565b5f80604083850312156121ec575f80fd5b82356121f781612069565b946020939093013593505050565b5f805f60608486031215612217575f80fd5b833561222281612069565b9250602084013561223281612069565b929592945050506040919091013590565b5f60208284031215612253575f80fd5b813567ffffffffffffffff811115612269575f80fd5b820160608185031215610e1b575f80fd5b5f6020828403121561228a575f80fd5b813567ffffffffffffffff8111156122a0575f80fd5b61094b84828501612104565b5f602082840312156122bc575f80fd5b8135610e1b81612069565b60ff60f81b881681525f602060e060208401526122e760e084018a61216f565b83810360408501526122f9818a61216f565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b8181101561234c57835183529284019291840191600101612330565b50909c9b505050505050505050505050565b801515811461204b575f80fd5b5f806040838503121561237c575f80fd5b823561238781612069565b915060208301356123978161235e565b809150509250929050565b5f805f80608085870312156123b5575f80fd5b84356123c081612069565b935060208501356123d081612069565b925060408501359150606085013567ffffffffffffffff8111156123f2575f80fd5b8501601f81018713612402575f80fd5b61241187823560208401612091565b91505092959194509250565b5f806040838503121561242e575f80fd5b823561243981612069565b9150602083013561239781612069565b5f60208284031215612459575f80fd5b8151610e1b8161235e565b634e487b7160e01b5f52601160045260245ffd5b5f6001820161248957612489612464565b5060010190565b600181811c908216806124a457607f821691505b6020821081036124c257634e487b7160e01b5f52602260045260245ffd5b50919050565b5f808335601e198436030181126124dd575f80fd5b83018035915067ffffffffffffffff8211156124f7575f80fd5b60200191503681900382131561250b575f80fd5b9250929050565b818382375f9101908152919050565b634e487b7160e01b5f52603260045260245ffd5b60208082526024908201527f457465726e616c536f756c3a2055736572206973206e6f7420617574686f726960408201526303d32b2160e51b606082015260800190565b601f82111561096d57805f5260205f20601f840160051c8101602085101561259e5750805b601f840160051c820191505b818110156115bc575f81556001016125aa565b815167ffffffffffffffff8111156125d7576125d761207d565b6125eb816125e58454612490565b84612579565b602080601f83116001811461261e575f84156126075750858301515b5f19600386901b1c1916600185901b178555612675565b5f85815260208120601f198616915b8281101561264c5788860151825594840194600190910190840161262d565b508582101561266957878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f6020828403121561268d575f80fd5b8151610e1b81612069565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f906126f89083018461216f565b9695505050505050565b5f60208284031215612712575f80fd5b8151610e1b81612036565b634e487b7160e01b5f52602160045260245ffd5b8181038181111561057657610576612464565b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220b971784d310f3ead0c2beed79ace814f9308556dd969bae2074b2f6cfff9d23864736f6c63430008180033";

type EternalSoulConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EternalSoulConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EternalSoul__factory extends ContractFactory {
  constructor(...args: EternalSoulConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EternalSoul";
  }

  deploy(
    name: string,
    symbol: string,
    _intialURI: string,
    domain: string,
    _version: string,
    _nftPrice: BigNumberish,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EternalSoul> {
    return super.deploy(
      name,
      symbol,
      _intialURI,
      domain,
      _version,
      _nftPrice,
      flowContract,
      overrides || {}
    ) as Promise<EternalSoul>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    _intialURI: string,
    domain: string,
    _version: string,
    _nftPrice: BigNumberish,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      _intialURI,
      domain,
      _version,
      _nftPrice,
      flowContract,
      overrides || {}
    );
  }
  attach(address: string): EternalSoul {
    return super.attach(address) as EternalSoul;
  }
  connect(signer: Signer): EternalSoul__factory {
    return super.connect(signer) as EternalSoul__factory;
  }
  static readonly contractName: "EternalSoul";
  public readonly contractName: "EternalSoul";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EternalSoulInterface {
    return new utils.Interface(_abi) as EternalSoulInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EternalSoul {
    return new Contract(address, _abi, signerOrProvider) as EternalSoul;
  }
}
