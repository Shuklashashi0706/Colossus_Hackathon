/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RewardToken, RewardTokenInterface } from "../RewardToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tradeHubAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "flowContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC1155InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valuesLength",
        type: "uint256",
      },
    ],
    name: "ERC1155InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC1155InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC1155InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC1155MissingApprovalForAll",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataUri",
        type: "string",
      },
    ],
    name: "RewardTokenCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ownerOrApproved",
        type: "address",
      },
    ],
    name: "RewardTokenDestroyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "Counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessMasterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "phygitalcontractAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "createFanToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "phygitalcontractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "delegateAssetCreation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "destroyAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "phygitalToRewardId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeHub",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801562000010575f80fd5b5060405162001f5638038062001f56833981016040819052620000339162000190565b846200003f81620000a1565b5060056200004e8582620002ca565b5060066200005d8482620002ca565b50600780546001600160a01b039384166001600160a01b031991821617909155600c8054929093169181168217909255600880549092161790555062000396915050565b6002620000af8282620002ca565b5050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112620000d7575f80fd5b81516001600160401b0380821115620000f457620000f4620000b3565b604051601f8301601f19908116603f011681019082821181831017156200011f576200011f620000b3565b81604052838152602092508660208588010111156200013c575f80fd5b5f91505b838210156200015f578582018301518183018401529082019062000140565b5f602085830101528094505050505092915050565b80516001600160a01b03811681146200018b575f80fd5b919050565b5f805f805f60a08688031215620001a5575f80fd5b85516001600160401b0380821115620001bc575f80fd5b620001ca89838a01620000c7565b96506020880151915080821115620001e0575f80fd5b620001ee89838a01620000c7565b9550604088015191508082111562000204575f80fd5b506200021388828901620000c7565b935050620002246060870162000174565b9150620002346080870162000174565b90509295509295909350565b600181811c908216806200025557607f821691505b6020821081036200027457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002c557805f5260205f20601f840160051c81016020851015620002a15750805b601f840160051c820191505b81811015620002c2575f8155600101620002ad565b50505b505050565b81516001600160401b03811115620002e657620002e6620000b3565b620002fe81620002f7845462000240565b846200027a565b602080601f83116001811462000334575f84156200031c5750858301515b5f19600386901b1c1916600185901b1785556200038e565b5f85815260208120601f198616915b82811015620003645788860151825594840194600190910190840162000343565b50858210156200038257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b611bb280620003a45f395ff3fe608060405234801561000f575f80fd5b506004361061013c575f3560e01c806354fd4d50116100b4578063a4b1105211610079578063a4b11052146102c8578063bd85b039146102db578063d5e57018146102fa578063e985e9c51461030d578063edf8706f14610320578063f242432a14610333575f80fd5b806354fd4d50146102565780635e3eeef9146102705780637ab007151461029a57806395d89b41146102ad578063a22cb465146102b5575f80fd5b80630e89341c116101055780630e89341c146101de57806318160ddd146101f15780632eb2c2d6146101f95780634e1273f41461020c5780634eeca0761461022c5780634f558e7914610235575f80fd5b8062fdd58e1461014057806301ffc9a71461016657806302fe53051461018957806306fdde031461019e5780630aa7c854146101b3575b5f80fd5b61015361014e366004611323565b610346565b6040519081526020015b60405180910390f35b610179610174366004611360565b61036d565b604051901515815260200161015d565b61019c610197366004611433565b610377565b005b6101a661044c565b60405161015d91906114b0565b6008546101c6906001600160a01b031681565b6040516001600160a01b03909116815260200161015d565b6101a66101ec3660046114c2565b6104d8565b600454610153565b61019c610207366004611568565b610577565b61021f61021a36600461160b565b6105de565b60405161015d91906116ff565b61015360095481565b6101796102433660046114c2565b5f90815260036020526040902054151590565b61025e600181565b60405160ff909116815260200161015d565b61015361027e366004611323565b600b60209081525f928352604080842090915290825290205481565b61019c6102a8366004611711565b6106a9565b6101a6610769565b61019c6102c336600461173e565b610776565b6007546101c6906001600160a01b031681565b6101536102e93660046114c2565b5f9081526003602052604090205490565b610153610308366004611773565b610785565b61017961031b3660046117c6565b61087a565b61015361032e3660046117f7565b6108a7565b61019c610341366004611888565b610a61565b5f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f61036782610ac0565b600c546001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156103cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ef91906118e8565b6104405760405162461bcd60e51b815260206004820152601a60248201527f526577617264546f6b656e3a20556e617574686f72697a65642100000000000060448201526064015b60405180910390fd5b61044981610b0f565b50565b6005805461045990611903565b80601f016020809104026020016040519081016040528092919081815260200182805461048590611903565b80156104d05780601f106104a7576101008083540402835291602001916104d0565b820191905f5260205f20905b8154815290600101906020018083116104b357829003601f168201915b505050505081565b5f818152600a602052604090208054606091906104f490611903565b80601f016020809104026020016040519081016040528092919081815260200182805461052090611903565b801561056b5780601f106105425761010080835404028352916020019161056b565b820191905f5260205f20905b81548152906001019060200180831161054e57829003601f168201915b50505050509050919050565b336001600160a01b03861681148015906105985750610596868261087a565b155b156105c95760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610437565b6105d68686868686610b1b565b505050505050565b6060815183511461060f5781518351604051635b05999160e01b815260048101929092526024820152604401610437565b5f835167ffffffffffffffff81111561062a5761062a611382565b604051908082528060200260200182016040528015610653578160200160208202803683370190505b5090505f5b84518110156106a15760208082028601015161067c90602080840287010151610346565b82828151811061068e5761068e61193b565b6020908102919091010152600101610658565b509392505050565b806106b43384610346565b1461071c5760405162461bcd60e51b815260206004820152603260248201527f526577617264546f6b656e3a2043616c6c6572206973206e6f7420746f6b656e604482015271081bdddb995c881bdc88185c1c1c9bdd995960721b6064820152608401610437565b610727338383610b80565b817f77ae73e9fd17485abbf01dffbf650cf3ffb79771e6e23a50beffcc20f5ab2107336040516001600160a01b03909116815260200160405180910390a25050565b6006805461045990611903565b610781338383610be6565b5050565b6001600160a01b0385165f908152600b602090815260408083208684529091528120548190156107d857506001600160a01b0386165f908152600b602090815260408083208784529091529020546107f2565b60098054905f6107e783611963565b919050555060095490505b6107fe33828887610c7a565b5f818152600a6020526040902061081584826119c4565b5060075461082d906001600160a01b03166001610776565b85336001600160a01b0316827fec01398bf72ebae4ad81f8babbd6de07baf966f47c9998ce8c6e3ff8b8d2b5748660405161086891906114b0565b60405180910390a49695505050505050565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b600c545f906001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156108fd573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061092191906118e8565b61096d5760405162461bcd60e51b815260206004820152601a60248201527f526577617264546f6b656e3a20556e617574686f72697a6564210000000000006044820152606401610437565b6001600160a01b0387165f908152600b60209081526040808320888452909152812054156109be57506001600160a01b0387165f908152600b602090815260408083208884529091529020546109d8565b60098054905f6109cd83611963565b919050555060095490505b6109e487828787610c7a565b5f818152600a602052604090206109fb84826119c4565b50600754610a13906001600160a01b03166001610776565b84336001600160a01b0316827fec01398bf72ebae4ad81f8babbd6de07baf966f47c9998ce8c6e3ff8b8d2b57486604051610a4e91906114b0565b60405180910390a4979650505050505050565b336001600160a01b0386168114801590610a825750610a80868261087a565b155b15610ab35760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610437565b6105d68686868686610cd5565b5f6001600160e01b03198216636cdb3d1360e11b1480610af057506001600160e01b031982166303a24d0760e21b145b8061036757506301ffc9a760e01b6001600160e01b0319831614610367565b600261078182826119c4565b6001600160a01b038416610b4457604051632bfa23e760e11b81525f6004820152602401610437565b6001600160a01b038516610b6c57604051626a0d4560e21b81525f6004820152602401610437565b610b798585858585610d61565b5050505050565b6001600160a01b038316610ba857604051626a0d4560e21b81525f6004820152602401610437565b604080516001808252602082018590528183019081526060820184905260a082019092525f60808201818152919291610b7991879185908590610d61565b6001600160a01b038216610c0e5760405162ced3e160e81b81525f6004820152602401610437565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610ca357604051632bfa23e760e11b81525f6004820152602401610437565b604080516001808252602082018690528183019081526060820185905260808201909252906105d65f87848487610d61565b6001600160a01b038416610cfe57604051632bfa23e760e11b81525f6004820152602401610437565b6001600160a01b038516610d2657604051626a0d4560e21b81525f6004820152602401610437565b60408051600180825260208201869052818301908152606082018590526080820190925290610d588787848487610d61565b50505050505050565b610d6d85858585610db4565b6001600160a01b03841615610b795782513390600103610da65760208481015190840151610d9f838989858589610ef1565b50506105d6565b6105d6818787878787611012565b610dc0848484846110f9565b6001600160a01b038416610e64575f805b8351811015610e4b575f838281518110610ded57610ded61193b565b602002602001015190508060035f878581518110610e0d57610e0d61193b565b602002602001015181526020019081526020015f205f828254610e309190611a80565b90915550610e4090508184611a80565b925050600101610dd1565b508060045f828254610e5d9190611a80565b9091555050505b6001600160a01b038316610eeb575f805b8351811015610edf575f838281518110610e9157610e9161193b565b602002602001015190508060035f878581518110610eb157610eb161193b565b60209081029190910181015182528101919091526040015f2080549190910390559190910190600101610e75565b50600480549190910390555b50505050565b6001600160a01b0384163b156105d65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610f359089908990889088908890600401611a93565b6020604051808303815f875af1925050508015610f6f575060408051601f3d908101601f19168201909252610f6c91810190611ad7565b60015b610fd6573d808015610f9c576040519150601f19603f3d011682016040523d82523d5f602084013e610fa1565b606091505b5080515f03610fce57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610437565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b14610d5857604051632bfa23e760e11b81526001600160a01b0386166004820152602401610437565b6001600160a01b0384163b156105d65760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906110569089908990889088908890600401611af2565b6020604051808303815f875af1925050508015611090575060408051601f3d908101601f1916820190925261108d91810190611ad7565b60015b6110bd573d808015610f9c576040519150601f19603f3d011682016040523d82523d5f602084013e610fa1565b6001600160e01b0319811663bc197c8160e01b14610d5857604051632bfa23e760e11b81526001600160a01b0386166004820152602401610437565b80518251146111285781518151604051635b05999160e01b815260048101929092526024820152604401610437565b335f5b835181101561122a576020818102858101820151908501909101516001600160a01b038816156111dc575f828152602081815260408083206001600160a01b038c168452909152902054818110156111b6576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610437565b5f838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615611220575f828152602081815260408083206001600160a01b038b1684529091528120805483929061121a908490611a80565b90915550505b505060010161112b565b5082516001036112aa5760208301515f906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161129b929190918252602082015260400190565b60405180910390a45050610b79565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516112f9929190611b4f565b60405180910390a45050505050565b80356001600160a01b038116811461131e575f80fd5b919050565b5f8060408385031215611334575f80fd5b61133d83611308565b946020939093013593505050565b6001600160e01b031981168114610449575f80fd5b5f60208284031215611370575f80fd5b813561137b8161134b565b9392505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156113bf576113bf611382565b604052919050565b5f82601f8301126113d6575f80fd5b813567ffffffffffffffff8111156113f0576113f0611382565b611403601f8201601f1916602001611396565b818152846020838601011115611417575f80fd5b816020850160208301375f918101602001919091529392505050565b5f60208284031215611443575f80fd5b813567ffffffffffffffff811115611459575f80fd5b611465848285016113c7565b949350505050565b5f81518084525f5b8181101561149157602081850181015186830182015201611475565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f61137b602083018461146d565b5f602082840312156114d2575f80fd5b5035919050565b5f67ffffffffffffffff8211156114f2576114f2611382565b5060051b60200190565b5f82601f83011261150b575f80fd5b8135602061152061151b836114d9565b611396565b8083825260208201915060208460051b870101935086841115611541575f80fd5b602086015b8481101561155d5780358352918301918301611546565b509695505050505050565b5f805f805f60a0868803121561157c575f80fd5b61158586611308565b945061159360208701611308565b9350604086013567ffffffffffffffff808211156115af575f80fd5b6115bb89838a016114fc565b945060608801359150808211156115d0575f80fd5b6115dc89838a016114fc565b935060808801359150808211156115f1575f80fd5b506115fe888289016113c7565b9150509295509295909350565b5f806040838503121561161c575f80fd5b823567ffffffffffffffff80821115611633575f80fd5b818501915085601f830112611646575f80fd5b8135602061165661151b836114d9565b82815260059290921b84018101918181019089841115611674575f80fd5b948201945b838610156116995761168a86611308565b82529482019490820190611679565b965050860135925050808211156116ae575f80fd5b506116bb858286016114fc565b9150509250929050565b5f815180845260208085019450602084015f5b838110156116f4578151875295820195908201906001016116d8565b509495945050505050565b602081525f61137b60208301846116c5565b5f8060408385031215611722575f80fd5b50508035926020909101359150565b8015158114610449575f80fd5b5f806040838503121561174f575f80fd5b61175883611308565b9150602083013561176881611731565b809150509250929050565b5f805f805f60a08688031215611787575f80fd5b61179086611308565b94506020860135935060408601359250606086013567ffffffffffffffff808211156117ba575f80fd5b6115dc89838a016113c7565b5f80604083850312156117d7575f80fd5b6117e083611308565b91506117ee60208401611308565b90509250929050565b5f805f805f8060c0878903121561180c575f80fd5b61181587611308565b955061182360208801611308565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561184d575f80fd5b6118598a838b016113c7565b935060a089013591508082111561186e575f80fd5b5061187b89828a016113c7565b9150509295509295509295565b5f805f805f60a0868803121561189c575f80fd5b6118a586611308565b94506118b360208701611308565b93506040860135925060608601359150608086013567ffffffffffffffff8111156118dc575f80fd5b6115fe888289016113c7565b5f602082840312156118f8575f80fd5b815161137b81611731565b600181811c9082168061191757607f821691505b60208210810361193557634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f600182016119745761197461194f565b5060010190565b601f8211156119bf57805f5260205f20601f840160051c810160208510156119a05750805b601f840160051c820191505b81811015610b79575f81556001016119ac565b505050565b815167ffffffffffffffff8111156119de576119de611382565b6119f2816119ec8454611903565b8461197b565b602080601f831160018114611a25575f8415611a0e5750858301515b5f19600386901b1c1916600185901b1785556105d6565b5f85815260208120601f198616915b82811015611a5357888601518255948401946001909101908401611a34565b5085821015611a7057878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156103675761036761194f565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f90611acc9083018461146d565b979650505050505050565b5f60208284031215611ae7575f80fd5b815161137b8161134b565b6001600160a01b0386811682528516602082015260a0604082018190525f90611b1d908301866116c5565b8281036060840152611b2f81866116c5565b90508281036080840152611b43818561146d565b98975050505050505050565b604081525f611b6160408301856116c5565b8281036020840152611b7381856116c5565b9594505050505056fea2646970667358221220597d837b35eab09d66f446752713d7b7d25132ba096a0f746f195e42cc3b396d64736f6c63430008180033";

type RewardTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardToken__factory extends ContractFactory {
  constructor(...args: RewardTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RewardToken";
  }

  deploy(
    baseURI: string,
    _name: string,
    _symbol: string,
    tradeHubAddress: string,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardToken> {
    return super.deploy(
      baseURI,
      _name,
      _symbol,
      tradeHubAddress,
      flowContract,
      overrides || {}
    ) as Promise<RewardToken>;
  }
  getDeployTransaction(
    baseURI: string,
    _name: string,
    _symbol: string,
    tradeHubAddress: string,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      baseURI,
      _name,
      _symbol,
      tradeHubAddress,
      flowContract,
      overrides || {}
    );
  }
  attach(address: string): RewardToken {
    return super.attach(address) as RewardToken;
  }
  connect(signer: Signer): RewardToken__factory {
    return super.connect(signer) as RewardToken__factory;
  }
  static readonly contractName: "RewardToken";
  public readonly contractName: "RewardToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardTokenInterface {
    return new utils.Interface(_abi) as RewardTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardToken {
    return new Contract(address, _abi, signerOrProvider) as RewardToken;
  }
}
